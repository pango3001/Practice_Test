1) This describes only the general characteristics of an object.
A) initialization
B) abstraction
C) detailed specification
D) initiation
E) None of these
Answer:  B

2) Which of the following is an example of a C++ primitive data type?
A) unsigned short int
B) long double
C) unsigned char
D) All of these
E) None of these
Answer:  D

3) This is required after the closing brace of the structure declaration.
A) square bracket
B) period
C) semicolon
D) colon
E) None of these
Answer:  C

4) Look at the following statement.

	bookList[2].publisher[3] = 't';

This statement ________.
A) is illegal in C++
B) will change the publisher's name of the second book in bookList to 't'
C) will store the character 't' in the fourth element of the publisher member of booklist[2]
D) will ultimately result in a runtime error
E) None of these
Answer:  C

5) When a structure is passed ________ to a function, its members are not copied.
A) by reference
B) by value
C) Neither of these
Answer:  A
6) Passing a structure as a constant reference parameter to a function ________.
A) can potentially result in changes to the structure's members
B) guarantees not to result in changes to the structure's members
C) will always change the structure's members
D) All of these
E) None of these
Answer:  B

7) This is like a structure, except all members occupy the same memory area.
A) array
B) union
C) structure pointer
D) array of pointers
E) None of these
Answer:  B

8) Members of a(n) ________ union have names, but the union itself has no name.
A) anonymous
B) dereferenced
C) organized
D) declared
E) None of these
Answer:  A

9) If Circle is a structure tag, the statement:

	Circle doSomething(Circle c2)

can be the header line for a function that ________.
A) determines and returns the area of a circle
B) takes a Circle structure as a parameter, does something, and returns a Circle structure
C) operates on a constant reference to a Circle structure
D) takes two Circle parameters and does something
E) None of these
Answer:  B

10) Which of the following assigns a value to the hourlyWage member of employee[2]?
A) employee[2]->hourlyWage = 50.00;
B) employee2.hourlyWage = 7.50;
C) hourlyWage[2].employee = 29.75
D) employee[2].hourlyWage = 100.00;
E) None of these
Answer:  D

 
11) You may use a pointer to a structure as a ________.
A) function parameter
B) structure member
C) function return type
D) All of these
E) None of these
Answer:  D
12) If an anonymous union is declared globally (outside all functions), it must be ________.
A) empty
B) declared static
C) explicitly declared "global"
D) initialized and used outside any function
E) None of these
Answer:  B

13) Data types that are created by the programmer are known as ________.
A) variables
B) abstract data types (ADT)
C) functions
D) parameters
E) None of these
Answer:  B

14) Before a structure can be used, it must be ________.
A) declared
B) dereferenced
C) initialized
D) All of these
E) None of these
Answer:  A

15) The name of the structure is referred to as its ________.
A) data type
B) argument
C) parameter
D) tag
E) None of these
Answer:  E

16) This allows you to access structure members.
A) structure access operator
B) dot operator
C) #include <structaccess> directive
D) getmember function
E) None of these
Answer:  B

17) A function ________ return a structure.
A) may
B) may not
C) will always
D) cannot possibly
E) None of these
Answer:  A
18) A structure pointer contains ________.
A) the address of a structure variable
B) the dereferenced address of a structure tag
C) the name and address of the structure tag
D) the address of a structure tag
E) None of these
Answer:  A

19) To dereference a structure pointer, the appropriate operator is ________.
A) the ampersand, &
B) an asterisk, *
C) the structure pointer operator, ->
D) the dereference operator, <-
E) None of these
Answer:  C

20) If a is a structure variable and p, a pointer, is a member of the structure, what will the following statement do?

	cout << *a.p;

A) Output the dereferenced value pointed to by p.
B) Result in a compiler error.
C) Output the address stored in p.
D) Output the value stored in a.
E) None of these
Answer:  A

21) A structure ________ contain members of the same data type.
A) cannot
B) can
C) shouldn't
D) None of these
Answer:  B

 
22) Which of the following statements outputs the value of the gpa member of element 1 of the student array?
A) cout << student1.gpa;
B) cout << firstStudent.gpa;
C) cout << student[1].gpa;
D) cout << student1->gpa;
E) None of these
Answer:  C
23) If Circle is a structure, the statement:

	Circle *pcirc = nullptr;

A) declares an empty structure variable called *pcirc
B) declares a structure pointer called pcirc initialized with a null pointer
C) is illegal in C++
D) initializes a null pointer with the value of the Circle pointer
E) None of these
Answer:  B

24) A good reason to pass a structure as a constant reference is ________.
A) to prevent changes to the structure members
B) to ensure changes to the structure members
C) to slow down the function's execution, preventing errors
D) to speed up the function's modification of the structure members
E) None of these
Answer:  A

25) In C++ 11 you can use a new type of enum, known as a(n) ________, (also known as an enum class) to have multiple enumerators with the same name, within the same scope.
A) universal enum
B) auto enum
C) multi-cast enum
D) strongly typed enum
E) None of these
Answer:  D

26) A declaration for an enumerated type begins with the ________ key word.
A) enumerated
B) enum_type
C) enum
D) ENUM
Answer:  C

 
27) With an enumerated data type, the enumerators are stored in memory as ________.
A) strings
B) integers
C) characters
D) doubles
Answer:  B
28) Look at the following declaration.

	enum Tree { OAK, MAPLE, PINE };

In memory, what value will the MAPLE enumerator be stored as?
A) "MAPLE"
B) 2
C) 'M'
D) 1
E) 1.0
Answer:  D

29) Look at the following declaration.

	enum Tree { OAK, MAPLE, PINE };

What is the value of the following relational expression?

	OAK > PINE

A) true
B) false
C) This is an error. You cannot compare enumerators with relational operators.
Answer:  B

30) Look at the following structure declaration.

	struct Employee
	{
	    string name;
	    int idNum;
	};

In this declaration, Employee is:
A) a member
B) an array
C) a tag
D) None of these
Answer:  C
 
31) Look at the following structure declaration.

	struct Employee
	{
	    string name;
	    int idNum;
	};

In this declaration, idNum is:
A) a member
B) an array
C) a tag
D) None of these
Answer:  A

11.2   True/False Questions

1) True/False:  A struct can contain members with varying data types.
Answer:  TRUE

2) True/False:  Any mathematical operations that can be performed on regular C++ variables can be performed on structure members.
Answer:  TRUE

3) True/False:  Structure variables may be passed as arguments to functions.
Answer:  TRUE

4) True/False:  The structure pointer operator is used to dereference a pointer to a structure, not a pointer that is a member of a structure.
Answer:  TRUE

5) True/False:  The expression s->m; indicates that s is a structure pointer and m is a structure member.
Answer:  TRUE

6) True/False:  A function cannot modify the members of a structure.
Answer:  FALSE

7) True/False:  If a function is legally prototyped to return an integer value, it can return a structure member that is an integer data type.
Answer:  TRUE

8) True/False:  You can define any number of union variables, but each variable can only store the value of one member at a time.
Answer:  TRUE

9) True/False:  When a programmer creates an abstract data type, he or she can decide what values are acceptable for the data type, as well as what operations may be performed on the data type.
Answer:  TRUE
10) True/False:  It is possible to output the contents of all members of a structure variable using a cout << statement followed by the name of the structure variable.
Answer:  FALSE

11) True/False:  It is possible for a structure variable to be a member of another structure variable.
Answer:  TRUE

12) True/False:  The expression *s->p; indicates that s is a structure pointer and p, which is also a pointer, is a member of the structure pointed to by s.
Answer:  TRUE

13) True/False:  It is possible for a structure to contain as a member a pointer to its own structure type.
Answer:  TRUE

14) True/False:  An anonymous union declaration actually creates the member variables in memory.
Answer:  TRUE

15) True/False:  A union can only have one member.
Answer:  FALSE

16) True/False:  The names of the enumerators in an enumerated data type must be enclosed in quotation marks.
Answer:  FALSE

17) True/False:  You cannot directly assign an integer value to an enum variable.
Answer:  TRUE

18) True/False:  You cannot directly assign an enumerator to an int variable.
Answer:  FALSE

19) True/False:  When you use a strongly typed enumerator in C++ 11, you must prefix the enumerator with the name of the enum, followed by the :: operator.
Answer:  TRUE

20) True/False:  In C++ 11, if you want to retrieve a strongly typed enumerator's underlying integer value, you must use a cast operator.
Answer:  TRUE
 
21) Look at the following structure declaration.

	struct Circle
	{
	    double centerX;
	    double centerY;
	    double radius;
	};

Assume that circle1 and circle2 are variables of the Circle type, and their members have been initialized. 
True/False:  The following if statement correctly determines whether the two variables' members contain the same data:

	if (circle1 == circle2)

Answer:  FALSE

22) The following union declaration appears on a system uses 4-byte ints and 8-byte doubles. 

	union Numbers
	{
	    int integerNumber;
	    double doubleNumber;
	};

	Numbers myNumber;
	myNumber.integerNumber = 1;

True/False:  After this code executes, the myNumber variable will occupy 4 bytes of memory.
Answer:  FALSE
